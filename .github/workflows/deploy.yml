name: Deploy Hotel Management App on EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout deployment repo
      - name: Checkout Deployment Repo
        uses: actions/checkout@v3

      # Step 2: List files for debug
      - name: List repo files
        run: ls -R

      # Step 3: Copy deployment repo to EC2
      - name: Copy deployment files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./*"
          target: /home/ubuntu/hotel-deploy

      # Step 4: SSH into EC2 and deploy
      - name: Deploy Hotel App on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          debug: true
          script: |
            cd ~/hotel-deploy

            # Install Git if missing
            if ! command -v git &> /dev/null; then
              echo "Installing Git..."
              sudo apt-get update -y
              sudo apt-get install -y git
            fi

            # Install Docker if missing
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt-get update -y
              sudo apt-get install -y ca-certificates curl gnupg lsb-release
              sudo mkdir -p /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update -y
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            # Stop old containers
            sudo docker compose down

            # Rebuild and deploy
            sudo docker compose up -d --build
